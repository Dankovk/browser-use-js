"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[7653],{9624:(e,r,n)=>{n.r(r),n.d(r,{assets:()=>c,contentTitle:()=>a,default:()=>g,frontMatter:()=>i,metadata:()=>o,toc:()=>l});const o=JSON.parse('{"id":"guides/error-handling","title":"Error Handling","description":"This guide covers error handling strategies in browser-use-node.","source":"@site/docs/guides/error-handling.md","sourceDirName":"guides","slug":"/guides/error-handling","permalink":"/browser-use-node/guides/error-handling","draft":false,"unlisted":false,"editUrl":"https://github.com/dankovk/browser-use-node/tree/main/docs/docs/guides/error-handling.md","tags":[],"version":"current","sidebarPosition":5,"frontMatter":{"sidebar_position":5}}');var t=n(4848),s=n(8453);const i={sidebar_position:5},a="Error Handling",c={},l=[{value:"Basic Error Handling",id:"basic-error-handling",level:2},{value:"Common Error Types",id:"common-error-types",level:2},{value:"Retry Mechanisms",id:"retry-mechanisms",level:2},{value:"Error Recovery Strategies",id:"error-recovery-strategies",level:2},{value:"Logging and Debugging",id:"logging-and-debugging",level:2},{value:"Best Practices",id:"best-practices",level:2}];function d(e){const r={code:"code",h1:"h1",h2:"h2",header:"header",p:"p",pre:"pre",...(0,s.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(r.header,{children:(0,t.jsx)(r.h1,{id:"error-handling",children:"Error Handling"})}),"\n",(0,t.jsx)(r.p,{children:"This guide covers error handling strategies in browser-use-node."}),"\n",(0,t.jsx)(r.h2,{id:"basic-error-handling",children:"Basic Error Handling"}),"\n",(0,t.jsx)(r.pre,{children:(0,t.jsx)(r.code,{className:"language-typescript",children:"const browser = new BrowserUse();\n\ntry {\n  await browser.goto('https://example.com');\n  await browser.click('#non-existent-button');\n} catch (error) {\n  console.error('Operation failed:', error.message);\n}\n"})}),"\n",(0,t.jsx)(r.h2,{id:"common-error-types",children:"Common Error Types"}),"\n",(0,t.jsx)(r.pre,{children:(0,t.jsx)(r.code,{className:"language-typescript",children:"// Navigation errors\ntry {\n  await browser.goto('https://invalid-url');\n} catch (NavigationError) {\n  // Handle navigation failure\n}\n\n// Element not found\ntry {\n  await browser.click('#missing-element');\n} catch (ElementNotFoundError) {\n  // Handle missing element\n}\n\n// Timeout errors\ntry {\n  await browser.waitForSelector('.slow-loading', { timeout: 5000 });\n} catch (TimeoutError) {\n  // Handle timeout\n}\n"})}),"\n",(0,t.jsx)(r.h2,{id:"retry-mechanisms",children:"Retry Mechanisms"}),"\n",(0,t.jsx)(r.pre,{children:(0,t.jsx)(r.code,{className:"language-typescript",children:"// Retry with exponential backoff\nconst result = await browser.retry(async () => {\n  await browser.click('#flaky-button');\n}, {\n  maxAttempts: 3,\n  backoff: 'exponential'\n});\n\n// Custom retry logic\nawait browser.retryWithCondition(\n  async () => await browser.click('#button'),\n  async () => await browser.isElementVisible('#success-message')\n);\n"})}),"\n",(0,t.jsx)(r.h2,{id:"error-recovery-strategies",children:"Error Recovery Strategies"}),"\n",(0,t.jsx)(r.pre,{children:(0,t.jsx)(r.code,{className:"language-typescript",children:"// Automatic error recovery\nbrowser.setErrorRecovery({\n  autoRetry: true,\n  maxAttempts: 3,\n  recoveryActions: ['refresh', 'wait', 'retry']\n});\n\n// Custom recovery actions\nbrowser.addRecoveryStrategy('elementNotFound', async (error) => {\n  await browser.scrollIntoView(error.selector);\n  await browser.click(error.selector);\n});\n"})}),"\n",(0,t.jsx)(r.h2,{id:"logging-and-debugging",children:"Logging and Debugging"}),"\n",(0,t.jsx)(r.pre,{children:(0,t.jsx)(r.code,{className:"language-typescript",children:"// Enable detailed logging\nbrowser.setLogLevel('debug');\n\n// Custom error logging\nbrowser.on('error', (error) => {\n  console.error('Browser error:', error);\n  // Send to error tracking service\n});\n\n// Screenshot on error\nbrowser.on('error', async (error) => {\n  await browser.screenshot({ path: `error-${Date.now()}.png` });\n});\n"})}),"\n",(0,t.jsx)(r.h2,{id:"best-practices",children:"Best Practices"}),"\n",(0,t.jsx)(r.pre,{children:(0,t.jsx)(r.code,{className:"language-typescript",children:"// Cleanup resources\ntry {\n  await browser.doSomething();\n} catch (error) {\n  // Handle error\n} finally {\n  await browser.close();\n}\n\n// Graceful degradation\ntry {\n  await browser.performComplexAction();\n} catch (error) {\n  // Fall back to simpler approach\n  await browser.performSimpleAction();\n}\n"})})]})}function g(e={}){const{wrapper:r}={...(0,s.R)(),...e.components};return r?(0,t.jsx)(r,{...e,children:(0,t.jsx)(d,{...e})}):d(e)}},8453:(e,r,n)=>{n.d(r,{R:()=>i,x:()=>a});var o=n(6540);const t={},s=o.createContext(t);function i(e){const r=o.useContext(s);return o.useMemo((function(){return"function"==typeof e?e(r):{...r,...e}}),[r,e])}function a(e){let r;return r=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:i(e.components),o.createElement(s.Provider,{value:r},e.children)}}}]);